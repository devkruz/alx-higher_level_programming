==============================
How to use 2-matrix_divided.py
==============================

This module define this function:
``matrix_divided(...)``

Usage
=====
``matrix_divided(..)``:
Divides all elements of a matrix.

Numbers
=======
``matrix_divided(..)``:
Returns an array of the divided result

::

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

::

``matrix_divided(..)``:
The matrix can contain both float and integer

::

    >>> matrix = [[1, 2.5, 3], [4.0, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.83, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2.5, 3], [4.0, 5, 6]]

::

``matrix_divided(..)``:
ach row of the matrix must be of the same size

::

    >>> matrix = [[1, 2.5, 3], [5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::

``matrix_divided(..)``:
Divisor must be a number(integer or float)

::

    >>> matrix =  [[1, 2.5, 3], [4.0, 5, 6]]
    >>> matrix_divided(matrix, "three")
    Traceback (most recent call last):
    TypeError: div must be a number

::

::

    >>> matrix =  [[1, 2.5, 3], [4.0, 5, 6]]
    >>> matrix_divided(matrix, None)
    Traceback (most recent call last):
    TypeError: div must be a number

::


``matrix_divided(..)``:
Divisor cant be equal to zero

::

    >>> matrix =  [[1, 2.5, 3], [4.0, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

::


``matrix_divided(..)``:
All elements of the matrix is rounded up to two
decimal places

::

    >>> matrix = [[1, 2.5555, 3], [4.0, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.85, 1.0], [1.33, 1.67, 2.0]]
    >>> matrix
    [[1, 2.5555, 3], [4.0, 5, 6]]

::